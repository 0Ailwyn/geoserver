---
swagger: '2.0'
info:
  version: 1.0.0
  title: GeoServer Layers
  description: A layer is a published resource (feature type or coverage).

paths:
  /layers:
    get:
      operationId: getLayers
      summary: Get a list of layers
      description: Displays a list of all layers on the server. You must use the "Accept:" header to specify format or append an extension to the endpoint (example "/layers.xml" for XML)
      produces:
        - application/json
        - application/xml
        - text/html
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LayerResponse"
          examples:
            application/xml: '
              <layers>
                 <layer>
                   <name>giant_polygon</name>
                   <atom:link xmlns:atom="http://www.w3.org/2005/Atom" rel="alternate"
                     href="http://localhost:8080/geoserver/rest/layers/giant_polygon.xml"
                     type="application/xml"/>
                 </layer>
                 <layer>
                   <name>bugsites</name>
                   <atom:link xmlns:atom="http://www.w3.org/2005/Atom" rel="alternate"
                     href="http://localhost:8080/geoserver/rest/layers/bugsites.xml"
                     type="application/xml"/>
                 </layer>
               </layers>
            '
            application/json: '
               {
                 "layers": {
                   "layer": [
                     {
                       "name": "giant_polygon",
                       "href": "http:\/\/localhost:8080\/geoserver\/rest\/layers\/giant_polygon.json"
                     },
                     {
                       "name": "bugsites",
                       "href": "http:\/\/localhost:8080\/geoserver\/rest\/layers\/bugsites.json"
                     },
                   ]
                 }
               }
            '

  /layers/{layerName}:
    get:
      operationId: getLayer
      summary: Retrieve a layer 
      description: Retrieves a single layer definition. Use the "Accept:" header to specify format or append an extension to the endpoint (example "/layers/{layer}.xml" for XML).
      produces:
        - application/xml
        - application/json
        - text/html
      parameters:
        - name: layerName
          in: path
          required: true
          description: The name of the layer to retrieve.
          type: string
        - name: quietOnNotFound 
          in: query
          required: false
          description: The quietOnNotFound parameter avoids logging an exception when the layer  is not present. Note that 404 status code will still be returned.
          type: boolean
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Layer"
          examples:
            application/xml: '
              <layer>
              </layer>
              '
            application/json: '
              {"layer": "tbd"}
              '

definitions:

  LayerResponse:
    title: layers
    type: object
    properties:
      layerGroups:
        $ref: "#/definitions/Layers"
        
  Layers:
    title: layers
    type: object
    properties:
      name:
        type: string
        description: Name of layer
      link:
        type: string
        description: URL to layer definition
        
  Layer:
    title: layer
    type: object
    properties:
      name:
        type: string
        description: Name of the layer
      path:
        type: string
        description: Location of the layer in the WMS capabilities layer tree
      type:
        type: string
        enum: 
        - VECTOR
        - RASTER
        - REMOTE
        - WMS
        - GROUP
        description: Type of published layer. Can be VECTOR, RASTER, REMOTE, WMS or GROUP. Must be consistent with resource definition.
      defaultStyle:
        $ref: "#/definitions/StyleReference"
      styles:
        type: array
        description: Avaialble styles for layer publication
        items:
          $ref: "#/definitions/StyleReference"
        properties:
          '@class':
            type: string
            enum:
            - linked-hash-set
            description: required value linked-hash-set.

  StyleReference:
      type: object
      title: style
      description: Refernece to  style definition
      properties:
        name:
          type: string
          description: Name of style
        link:
          type: string
          description: URL to the style definition