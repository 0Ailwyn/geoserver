---
swagger: '2.0'
info:
  version: 1.0.0
  title: OWS Services
  description: A coverage is a raster data set which originates from a coverage store.
host: localhost:8080
basePath: /geoserver/rest

paths:
  /services/wms/settings:
    get:
      operationId: getWmsSettings
      description: |
        Controls Web Map Service settings.
      produces:
        - text/html
        - application/xml
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/WMSInfo"
          examples:
            application/xml: |
              <wms>
                <enabled>true</enabled>
                <name>My GeoServer WMS</name>
                <title>My GeoServer WMS</title>
                <maintainer>http://geoserver.org/comm</maintainer>
                <abstrct>
              This is a description of your Web Map Server.
                   </abstrct>
                <accessConstraints>NONE</accessConstraints>
                <fees>NONE</fees>
                <versions>
                  <org.geotools.util.Version>
                    <version>1.1.1</version>
                  </org.geotools.util.Version>
                  <org.geotools.util.Version>
                    <version>1.3.0</version>
                  </org.geotools.util.Version>
                </versions>
                <keywords>
                  <string>WFS</string>
                  <string>WMS</string>
                  <string>GEOSERVER</string>
                </keywords>
                <citeCompliant>false</citeCompliant>
                <onlineResource>http://geoserver.org</onlineResource>
                <schemaBaseURL>http://schemas.opengis.net</schemaBaseURL>
                <verbose>false</verbose>
                <metadata>
                  <entry key="svgAntiAlias">true</entry>
                  <entry key="svgRenderer">Batik</entry>
                </metadata>
                <watermark>
                  <enabled>false</enabled>
                  <position>BOT_RIGHT</position>
                  <transparency>0</transparency>
                </watermark>
                <interpolation>Nearest</interpolation>
                <getFeatureInfoMimeTypeCheckingEnabled>false</getFeatureInfoMimeTypeCheckingEnabled>
                <getMapMimeTypeCheckingEnabled>false</getMapMimeTypeCheckingEnabled>
                <dynamicStylingDisabled>false</dynamicStylingDisabled>
                <maxBuffer>25</maxBuffer>
                <maxRequestMemory>0</maxRequestMemory>
                <maxRenderingTime>0</maxRenderingTime>
                <maxRenderingErrors>0</maxRenderingErrors>
              </wms>
            application/json: |
              {
                "wms": {
                  "enabled": true,
                  "name": "My GeoServer WMS",
                  "title": "My GeoServer WMS",
                  "maintainer": "http://geoserver.org/comm",
                  "abstrct": "\nThis is a description of your Web Map Server.\n     ",
                  "accessConstraints": "NONE",
                  "fees": "NONE",
                  "versions": {
                    "org.geotools.util.Version": [
                      {
                        "version": "1.1.1"
                      },
                      {
                        "version": "1.3.0"
                      }
                    ]
                  },
                  "keywords": {
                    "string": [
                      "WFS",
                      "WMS",
                      "GEOSERVER"
                    ]
                  },
                  "citeCompliant": false,
                  "onlineResource": "http://geoserver.org",
                  "schemaBaseURL": "http://schemas.opengis.net",
                  "verbose": false,
                  "metadata": {
                    "entry": [
                      {
                        "@key": "svgAntiAlias",
                        "$": "true"
                      },
                      {
                        "@key": "svgRenderer",
                        "$": "Batik"
                      }
                    ]
                  },
                  "watermark": {
                    "enabled": false,
                    "position": "BOT_RIGHT",
                    "transparency": 0
                  },
                  "interpolation": "Nearest",
                  "getFeatureInfoMimeTypeCheckingEnabled": false,
                  "getMapMimeTypeCheckingEnabled": false,
                  "dynamicStylingDisabled": false,
                  "maxBuffer": 25,
                  "maxRequestMemory": 0,
                  "maxRenderingTime": 0,
                  "maxRenderingErrors": 0
                }
              }
  /services/wms/workspaces/{workspace}/settings:
    get:
      operationId: getWmsWorkspaceSettings
      description: |
        Controls workspace specific Web Map Service settings.
      produces:
        - text/html
        - application/xml
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/WMSInfo"
          examples:
            application/xml: |
              foo
            application/json: |
              bar
  /services/wfs/settings:
    get:
      operationId: getWfsSettings
      description: |
        Controls Web Feature Service settings.
      produces:
        - text/html
        - application/xml
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/WFSInfo"
  /services/wfs/workspaces/{workspace}/settings:
    get:
      operationId: getWfsWorkspaceSettings
      description: |
        Controls workspace specific Web Feature Service settings.
      produces:
        - text/html
        - application/xml
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/WFSInfo"


definitions:
  WMSInfo:
    type: object
    properties:
      enabled:
        type: boolean
        description: Status of the service
      name:
        type: string
        description: Name of the service. This value is unique among all instances of ServiceInfo and can be used as an identifier.
      title:
        type: string
        description: title of the service
      workspace:
        type: string
        description: The workspace the service is specific or local to, or null if the service is global.
      maintainer:
        type: string
        description: maintainer of the service
      abstrct:
        type: string
        description: description of the service
      accessConstraints:
        type: string
        description:
      fees:
        type: string
        description:
      versions:
        type: object
        description: The versions of the service that are available.
        org.geotools.util.Version:
          type: array
          items:
            version:
              type: string
              description: version number
      keywords:
        type: object
        description: Keywords associated with the service.
        string:
          type: array
          items:
            type: string
      citeCompliant:
        type: boolean
        description: Status of service CITE compliance.
      onlineResource:
        type: string
        description:
      schemaBaseURL:
        type: string
        description: The base url for the schemas describing the service.
      verbose:
        type: boolean
        description: Flag indicating if the service should be verbose or not.
      metadata:
        type: object
        entry:
          type: array
          items:
            type: object
            properties:
              "@key":
                type: string
                description: key
              "$":
                type: string
                description: value
      watermark:
        type: object
        description: The watermarking configuration.
        properties:
          enabled:
            type: boolean
            description: Flag indicating if water marking is enabled.
          position:
            type: string
            description: The position of a watermark logo.
            enum:
              - TOP_LEFT
              - TOP_CENTER
              - TOP_RIGHT
              - MID_LEFT
              - MID_CENTER
              - MID_RIGHT
              - BOT_LEFT
              - BOT_CENTER
              - BOT_RIGHT
          transparency:
            type: integer
            description: The transparency of the watermark logo, ranging from 0 to 255.
      interpolation:
        type: string
        enum:
          - Nearest
          - Bilinear
          - Bicubic
      getFeatureInfoMimeTypeCheckingEnabled:
        type: boolean
        description: Flag indicating if getFeatureInfo mime type checking is enabled.
      getMapMimeTypeCheckingEnabled:
        type: boolean
        description: Flag indicating if getMap mime type checking is enabled.
      dynamicStylingDisabled:
        type: boolean
        description: The status of dynamic styling (SLD and SLD_BODY params) allowance
      maxBuffer:
        type: integer
        description: The maximum search radius for GetFeatureInfo
      maxRequestMemory:
        type: integer
        description: The max amount of memory, in kilobytes, that each WMS request can allocate (each output format will make a best effort attempt to respect it, but there are no guarantees). 0 indicates no limit.
      maxRenderingTime:
        type: integer
        description: The max time, in seconds, a WMS request is allowed to spend rendering the map. Various output formats will do a best effort to respect it (raster formats, for example, will account just rendering time, but not image encoding time)
      maxRenderingErrors:
        type: integer
        description: The max number of rendering errors that will be tolerated before stating the rendering operation failed by throwing a service exception back to the client

  WFSInfo:
    type: object
    properties:
      enabled:
        type: boolean
        description: Status of the service
      name:
        type: string
        description: Name of the service. This value is unique among all instances of ServiceInfo and can be used as an identifier.
      title:
        type: string
        description: title of the service
      workspace:
        type: string
        description: The workspace the service is specific or local to, or null if the service is global.
      maintainer:
        type: string
        description: maintainer of the service
      abstrct:
        type: string
        description: description of the service
      accessConstraints:
        type: string
        description:
      fees:
        type: string
        description:
      versions:
        type: object
        description: The versions of the service that are available.
        org.geotools.util.Version:
          type: array
          items:
            version:
              type: string
              description: version number
      keywords:
        type: object
        description: Keywords associated with the service.
        string:
          type: array
          items:
            type: string
      citeCompliant:
        type: boolean
        description: Status of service CITE compliance.
      onlineResource:
        type: string
        description:
      schemaBaseURL:
        type: string
        description: The base url for the schemas describing the service.
      verbose:
        type: boolean
        description: Flag indicating if the service should be verbose or not.
      gml:
        type: object
        description: A map of wfs version to gml encoding configuration.
        properties:
          entry:
            type: array
            items:
              type: object
              properties:
                version:
                  type: string
                  enum:
                    - 1.0.0
                    - 1.1.0
                    - 2.0.0
                gml:
                  type: object
                  description: Enumeration for srsName style.
                  properties:
                    srsNameStyle:
                      type: array
                      items:
                        type: string
                        enum:
                          - NORMAL
                          - XML
                          - URN
                          - URN2
                          - URL
      serviceLevel:
        type: string
        description: The level of service provided by the WFS.
        enum:
          - BASIC
          - TRANSACTIONAL
          - COMPLETE
      maxFeatures:
        type: integer
        description: A global cap on the number of features to allow when processing a request.
      featureBounding:
        type: boolean
        description: The flag which determines if gml:bounds elements should be encoded at the feature level in gml output.
      canonicalSchemaLocation:
        type: boolean
        description: Get the flag that determines the encoding of the WFS schemaLocation. True if the WFS schemaLocation should refer to the canonical location, false if the WFS schemaLocation should refer to a copy served by GeoServer.
      encodeFeatureMember:
        type: boolean
        description: The flag that determines encoding of featureMember or featureMembers True if the featureMember should be encoded False if the featureMembers should be encoded
      hitsIgnoreMaxFeatures:
        type: boolean
        description: Get the flag that determines if WFS hit requests (counts) will ignore the maximum features limit for this server




  MethodNotAllowed:
    405:
      description: Method not allowed.